/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../../context/context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Date";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Date";
  }
}
declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  CommentOrderByInput: { // input type
    authorId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    createdAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    postId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    text?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  CommentWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  PostOrderByInput: { // input type
    authorId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    body?: NexusGenEnums['SortOrder'] | null; // SortOrder
    createdAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    published?: NexusGenEnums['SortOrder'] | null; // SortOrder
    title?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  PostWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  UserOrderByInput: { // input type
    createdAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    email?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    name?: NexusGenEnums['SortOrder'] | null; // SortOrder
    password?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  UserWhereUniqueInput: { // input type
    email?: string | null; // String
    id?: string | null; // String
  }
  createCommentInput: { // input type
    text: string; // String!
  }
  createPostInput: { // input type
    body: string; // String!
    published: boolean; // Boolean!
    title: string; // String!
  }
  createUserInput: { // input type
    email: string; // String!
    name: string; // String!
    password: string; // String!
  }
  loginUserInput: { // input type
    email: string; // String!
    password: string; // String!
  }
  updatePostInput: { // input type
    body?: string | null; // String
    published?: boolean | null; // Boolean
    title?: string | null; // String
  }
  updateUserInput: { // input type
    email?: string | null; // String
    name?: string | null; // String
    password?: string | null; // String
  }
}

export interface NexusGenEnums {
  MUTATION_TYPE: "CREATED" | "DELETED" | "UPDATED"
  SortOrder: "asc" | "desc"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  Date: any
  DateTime: any
}

export interface NexusGenObjects {
  AuthPayload: { // root type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Avatar: { // root type
    id: string; // String!
    publicId: string; // String!
    url: string; // String!
  }
  Comment: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    text: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Image: { // root type
    id: string; // String!
    publicId: string; // String!
    url: string; // String!
  }
  Mutation: {};
  Post: { // root type
    body: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    published: boolean; // Boolean!
    title: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  PostSubscriptionPayload: { // root type
    post: NexusGenRootTypes['Post']; // Post!
    type: NexusGenEnums['MUTATION_TYPE']; // MUTATION_TYPE!
  }
  Query: {};
  User: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    name: string; // String!
    password: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Avatar: { // field return type
    id: string; // String!
    owner: NexusGenRootTypes['User']; // User!
    publicId: string; // String!
    url: string; // String!
  }
  Comment: { // field return type
    author: NexusGenRootTypes['User']; // User!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    likes: NexusGenRootTypes['User'][]; // [User!]!
    post: NexusGenRootTypes['Post']; // Post!
    text: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Image: { // field return type
    id: string; // String!
    owner: NexusGenRootTypes['Post']; // Post!
    publicId: string; // String!
    url: string; // String!
  }
  Mutation: { // field return type
    addLikeToComment: NexusGenRootTypes['Comment']; // Comment!
    addLikeToPost: NexusGenRootTypes['Post'] | null; // Post
    createAvatar: NexusGenRootTypes['Avatar']; // Avatar!
    createComment: NexusGenRootTypes['Comment']; // Comment!
    createImage: NexusGenRootTypes['Image']; // Image!
    createPost: NexusGenRootTypes['Post']; // Post!
    createUser: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    deleteAvatar: NexusGenRootTypes['Avatar']; // Avatar!
    deleteComment: NexusGenRootTypes['Comment']; // Comment!
    deleteImage: NexusGenRootTypes['Image']; // Image!
    deletePost: NexusGenRootTypes['Post']; // Post!
    deleteUser: NexusGenRootTypes['User']; // User!
    followUser: NexusGenRootTypes['User']; // User!
    removeLikeFromComment: NexusGenRootTypes['Comment']; // Comment!
    removeLikeFromPost: NexusGenRootTypes['Post'] | null; // Post
    removeSavePost: NexusGenRootTypes['Post']; // Post!
    savePost: NexusGenRootTypes['Post']; // Post!
    unfollowUser: NexusGenRootTypes['User']; // User!
    updateComment: NexusGenRootTypes['Comment']; // Comment!
    updatePost: NexusGenRootTypes['Post']; // Post!
    updateUser: NexusGenRootTypes['User']; // User!
    userLogin: NexusGenRootTypes['AuthPayload']; // AuthPayload!
  }
  Post: { // field return type
    author: NexusGenRootTypes['User']; // User!
    body: string; // String!
    comments: NexusGenRootTypes['Comment'][]; // [Comment!]!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    image: NexusGenRootTypes['Image'] | null; // Image
    likes: NexusGenRootTypes['User'][]; // [User!]!
    postSavedByUser: NexusGenRootTypes['User'][]; // [User!]!
    published: boolean; // Boolean!
    title: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  PostSubscriptionPayload: { // field return type
    post: NexusGenRootTypes['Post']; // Post!
    type: NexusGenEnums['MUTATION_TYPE']; // MUTATION_TYPE!
  }
  Query: { // field return type
    comments: NexusGenRootTypes['Comment'][]; // [Comment!]!
    drafts: NexusGenRootTypes['Post'][]; // [Post!]!
    image: NexusGenRootTypes['Image']; // Image!
    me: NexusGenRootTypes['User'] | null; // User
    myComments: NexusGenRootTypes['Comment'][]; // [Comment!]!
    myPosts: NexusGenRootTypes['Post'][]; // [Post!]!
    post: NexusGenRootTypes['Post'] | null; // Post
    posts: NexusGenRootTypes['Post'][]; // [Post!]!
    user: NexusGenRootTypes['User'] | null; // User
    userComments: NexusGenRootTypes['Comment'][]; // [Comment!]!
    userPosts: NexusGenRootTypes['Post'][]; // [Post!]!
    users: NexusGenRootTypes['User'][]; // [User!]!
  }
  User: { // field return type
    comments: NexusGenRootTypes['Comment'][]; // [Comment!]!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    followers: NexusGenRootTypes['User'][]; // [User!]!
    following: NexusGenRootTypes['User'][]; // [User!]!
    id: string; // String!
    likedComments: NexusGenRootTypes['Comment'][]; // [Comment!]!
    likedPosts: NexusGenRootTypes['Post'][]; // [Post!]!
    name: string; // String!
    password: string; // String!
    posts: NexusGenRootTypes['Post'][]; // [Post!]!
    savedPosts: NexusGenRootTypes['Post'][]; // [Post!]!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
}

export interface NexusGenFieldTypeNames {
  AuthPayload: { // field return type name
    token: 'String'
    user: 'User'
  }
  Avatar: { // field return type name
    id: 'String'
    owner: 'User'
    publicId: 'String'
    url: 'String'
  }
  Comment: { // field return type name
    author: 'User'
    createdAt: 'DateTime'
    id: 'String'
    likes: 'User'
    post: 'Post'
    text: 'String'
    updatedAt: 'DateTime'
  }
  Image: { // field return type name
    id: 'String'
    owner: 'Post'
    publicId: 'String'
    url: 'String'
  }
  Mutation: { // field return type name
    addLikeToComment: 'Comment'
    addLikeToPost: 'Post'
    createAvatar: 'Avatar'
    createComment: 'Comment'
    createImage: 'Image'
    createPost: 'Post'
    createUser: 'AuthPayload'
    deleteAvatar: 'Avatar'
    deleteComment: 'Comment'
    deleteImage: 'Image'
    deletePost: 'Post'
    deleteUser: 'User'
    followUser: 'User'
    removeLikeFromComment: 'Comment'
    removeLikeFromPost: 'Post'
    removeSavePost: 'Post'
    savePost: 'Post'
    unfollowUser: 'User'
    updateComment: 'Comment'
    updatePost: 'Post'
    updateUser: 'User'
    userLogin: 'AuthPayload'
  }
  Post: { // field return type name
    author: 'User'
    body: 'String'
    comments: 'Comment'
    createdAt: 'DateTime'
    id: 'String'
    image: 'Image'
    likes: 'User'
    postSavedByUser: 'User'
    published: 'Boolean'
    title: 'String'
    updatedAt: 'DateTime'
  }
  PostSubscriptionPayload: { // field return type name
    post: 'Post'
    type: 'MUTATION_TYPE'
  }
  Query: { // field return type name
    comments: 'Comment'
    drafts: 'Post'
    image: 'Image'
    me: 'User'
    myComments: 'Comment'
    myPosts: 'Post'
    post: 'Post'
    posts: 'Post'
    user: 'User'
    userComments: 'Comment'
    userPosts: 'Post'
    users: 'User'
  }
  User: { // field return type name
    comments: 'Comment'
    createdAt: 'DateTime'
    email: 'String'
    followers: 'User'
    following: 'User'
    id: 'String'
    likedComments: 'Comment'
    likedPosts: 'Post'
    name: 'String'
    password: 'String'
    posts: 'Post'
    savedPosts: 'Post'
    updatedAt: 'DateTime'
  }
}

export interface NexusGenArgTypes {
  Comment: {
    likes: { // args
      cursor?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
  Mutation: {
    addLikeToComment: { // args
      id: string; // String!
    }
    addLikeToPost: { // args
      id: string; // String!
    }
    createAvatar: { // args
      image: string; // String!
    }
    createComment: { // args
      data: NexusGenInputs['createCommentInput']; // createCommentInput!
      postId: string; // ID!
    }
    createImage: { // args
      image: string; // String!
      postId: string; // ID!
    }
    createPost: { // args
      data: NexusGenInputs['createPostInput']; // createPostInput!
    }
    createUser: { // args
      data: NexusGenInputs['createUserInput']; // createUserInput!
    }
    deleteAvatar: { // args
      id: string; // ID!
    }
    deleteComment: { // args
      id: string; // ID!
    }
    deleteImage: { // args
      id: string; // ID!
    }
    deletePost: { // args
      id: string; // ID!
    }
    followUser: { // args
      id: string; // String!
    }
    removeLikeFromComment: { // args
      id: string; // String!
    }
    removeLikeFromPost: { // args
      id: string; // String!
    }
    removeSavePost: { // args
      id: string; // String!
    }
    savePost: { // args
      id: string; // String!
    }
    unfollowUser: { // args
      id: string; // String!
    }
    updateComment: { // args
      data?: NexusGenInputs['createCommentInput'] | null; // createCommentInput
      id: string; // ID!
    }
    updatePost: { // args
      data: NexusGenInputs['updatePostInput']; // updatePostInput!
      id: string; // ID!
    }
    updateUser: { // args
      data: NexusGenInputs['updateUserInput']; // updateUserInput!
    }
    userLogin: { // args
      data: NexusGenInputs['loginUserInput']; // loginUserInput!
    }
  }
  Post: {
    comments: { // args
      cursor?: NexusGenInputs['CommentWhereUniqueInput'] | null; // CommentWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    likes: { // args
      cursor?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    postSavedByUser: { // args
      cursor?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
  Query: {
    comments: { // args
      cursor?: NexusGenInputs['CommentWhereUniqueInput'] | null; // CommentWhereUniqueInput
      orderBy?: NexusGenInputs['CommentOrderByInput'][] | null; // [CommentOrderByInput!]
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    drafts: { // args
      cursor?: NexusGenInputs['PostWhereUniqueInput'] | null; // PostWhereUniqueInput
      orderBy?: NexusGenInputs['PostOrderByInput'][] | null; // [PostOrderByInput!]
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    image: { // args
      productId: string; // ID!
    }
    me: { // args
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
    myComments: { // args
      cursor?: NexusGenInputs['CommentWhereUniqueInput'] | null; // CommentWhereUniqueInput
      orderBy?: NexusGenInputs['CommentOrderByInput'][] | null; // [CommentOrderByInput!]
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    myPosts: { // args
      cursor?: NexusGenInputs['PostWhereUniqueInput'] | null; // PostWhereUniqueInput
      orderBy?: NexusGenInputs['PostOrderByInput'][] | null; // [PostOrderByInput!]
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    post: { // args
      where: NexusGenInputs['PostWhereUniqueInput']; // PostWhereUniqueInput!
    }
    posts: { // args
      cursor?: NexusGenInputs['PostWhereUniqueInput'] | null; // PostWhereUniqueInput
      orderBy?: NexusGenInputs['PostOrderByInput'][] | null; // [PostOrderByInput!]
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    user: { // args
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
    userComments: { // args
      id: string; // String!
      orderBy?: NexusGenInputs['CommentOrderByInput'] | null; // CommentOrderByInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    userPosts: { // args
      id: string; // String!
      orderBy?: NexusGenInputs['PostOrderByInput'] | null; // PostOrderByInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    users: { // args
      cursor?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      orderBy?: NexusGenInputs['UserOrderByInput'][] | null; // [UserOrderByInput!]
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
  User: {
    comments: { // args
      cursor?: NexusGenInputs['CommentWhereUniqueInput'] | null; // CommentWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    followers: { // args
      cursor?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    following: { // args
      cursor?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    likedComments: { // args
      cursor?: NexusGenInputs['CommentWhereUniqueInput'] | null; // CommentWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    likedPosts: { // args
      cursor?: NexusGenInputs['PostWhereUniqueInput'] | null; // PostWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    posts: { // args
      cursor?: NexusGenInputs['PostWhereUniqueInput'] | null; // PostWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    savedPosts: { // args
      cursor?: NexusGenInputs['PostWhereUniqueInput'] | null; // PostWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}